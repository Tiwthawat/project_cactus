'use client';
import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import EditProfileModal from '../../component/EditProfileModal';
import ChangePasswordModal from '../../component/ChangePassword';
import Link from 'next/link';




interface UserInfo {
  Cid: number;
  Cname: string;
  Caddress: string;
  Csubdistrict: string;
  Cdistrict: string;
  Cprovince: string;
  Czipcode: string;
  Cusername: string;
  Cpassword: string;
  Cphone: string;
  Cstatus: string;
  Cdate: string;
  Cbirth: string;
 Cprofile: string | null;
}


const formatThaiDate = (isoDate: string) => {
  const date = new Date(isoDate);
  return date.toLocaleDateString('th-TH', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

export default function MePage() {
  const [user, setUser] = useState<UserInfo | null>(null);
  const [showModal, setShowModal] = useState(false);
  const router = useRouter();
  const [showPasswordModal, setShowPasswordModal] = useState(false);


  useEffect(() => {
    const fetchUser = async () => {
      const token = localStorage.getItem('token');
      if (!token) {
        router.push('/login');
        return;
      }

      try {
        const res = await fetch('http://localhost:3000/me', {

          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        });
        if (!res.ok) throw new Error('Unauthorized');

        const data = await res.json();
        const raw = data.user;

        setUser({
          Cid: raw.Cid,
          Cname: raw.Cname,
          Caddress: raw.Caddress,
          Csubdistrict: raw.Csubdistrict, // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ
          Cdistrict: raw.Cdistrict,       // ‚úÖ
          Cprovince: raw.Cprovince,       // ‚úÖ
          Czipcode: raw.Czipcode,         // ‚úÖ
          Cusername: raw.Cusername,
          Cpassword: '********',
          Cphone: raw.Cphone,
          Cstatus: raw.Cstatus,
          Cdate: raw.Cdate,
          Cbirth: raw.Cbirth,
          Cprofile: raw.Cprofile
          
        });


      } catch (err) {
        console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:', err);
        router.push('/login');
      }
    };

    fetchUser();
  }, [router]);

  if (!user) return <div>Loading...</div>;


  return (
    <div className="min-h-screen bg-gray-100 px-4 py-8">
      <div className="max-w-4xl mx-auto grid gap-8 grid-cols-1 md:grid-cols-2">
        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß */}
        <div className="bg-white rounded-xl shadow p-6">
  <div className="flex justify-between items-center mb-3">
    <h2 className="text-lg text-gray-800 font-semibold border-b pb-2">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ </h2>
    <button
      className="text-blue-600 hover:underline text-sm"
      onClick={() => setShowModal(true)}
    >
      ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    </button>
  </div>

  {/* ‚úÖ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
  <div className="flex items-center justify-center mb-4">
    <div className="w-28 h-28 rounded-full overflow-hidden border-2 border-gray-300">
      <img
  src={user.Cprofile ? `http://localhost:3000/profiles/${user.Cprofile}` : '/default-profile.png'}
  alt="‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå"
  className="w-full h-full object-cover"
/>

    </div>
  </div>
  

  <div className="space-y-2 text-sm text-gray-800">
    <div><strong>‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</strong> {user.Cid}</div>
    <div><strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {user.Cname}</div>
    <div><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {user.Caddress} ‡∏ï.{user.Csubdistrict} ‡∏≠.{user.Cdistrict} ‡∏à.{user.Cprovince} {user.Czipcode}</div>
    <div><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</strong> {user.Cusername}</div>
    <div><strong>‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:</strong> {user.Cpassword}</div>
    <div><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {user.Cphone}</div>
    <div><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:</strong> {user.Cstatus}</div>
    <div><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:</strong> {formatThaiDate(user.Cdate)}</div>
    <div><strong>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î:</strong> {formatThaiDate(user.Cbirth)}</div>
  </div><br />

  <button onClick={() => setShowPasswordModal(true)} className="text-blue-600 hover:underline">
    ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
  </button>
</div>


        {/* ‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
        <div className="bg-white rounded-xl shadow p-6">
          <h2 className="text-lg font-semibold border-b pb-2 mb-3">‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>
          <ul className="space-y-1 text-sm text-gray-800 list-disc list-inside">
            <Link href="/favorites" className="text-blue-600">ü§ç ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î</Link>

            <li>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</li>
            <li>
              <Link href="/me/orders" className="text-blue-600 hover:underline">
                ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
              </Link>
            </li>

            <li>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞‡πÅ‡∏•‡πâ‡∏ß</li>
            <li>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</li>
            <li>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</li>
          </ul>
        </div>
      </div>

      {/* Modal ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
      {showModal && user && (
        <EditProfileModal
          user={user}
          onClose={() => setShowModal(false)}
        />
      )}
      {showPasswordModal && (
        <ChangePasswordModal onClose={() => setShowPasswordModal(false)} />
      )}

    </div>

  );
}
